version: "3.7"

services:
  sql-server-db:
    container_name: sql-server-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: 'SuperPassword@24'
      ACCEPT_EULA: "Y"
    volumes:
      - ./packages/scripts:/scripts  # Certifique-se de que o script init.sql está neste diretório
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'SuperPassword@24' -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 20 
      start_period: 30s  # Aumentar o período de espera inicial
      timeout: 5s
    entrypoint:
      - /bin/bash
      - -c
      - |
        /opt/mssql/bin/sqlservr & 
        # Espera até o SQL Server estar pronto para aceitar conexões
        for i in {1..30}; do
          echo "Aguardando o SQL Server iniciar..."
          sleep 5
          if /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'SuperPassword@24' -Q "SELECT 1" > /dev/null 2>&1; then
            echo "SQL Server está pronto. Executando scripts de inicialização..."
            # Executa o script init.sql
            /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'SuperPassword@24' -i /scripts/init.sql || echo "Erro ao executar o script."
            break
          fi
        done
        echo "Scripts de inicialização executados."
    networks:
      - app-network
  products-catalogs-api:
    container_name: products-catalogs-api
    image: products-catalogs:latest 
    build:
      context: ./  
      dockerfile: Dockerfile  
    ports:
      - "51000:51000"  
    environment:
      ConnectionStrings__DefaultConnection: "Server=sql-server-db;Database=ProductCatalogDb;User Id=sa;Password=SuperPassword@24;"  # String de conexão
    depends_on:
      - sql-server-db
    networks:
      - app-network
networks:
  app-network:
    driver: bridge